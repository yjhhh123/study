### 검색 알고리즘

검색과 키

ex)

1. 국적이 한국인 사람을 찾습니다
2. 나이가 21세 이상 27세 미만인 사람을 찾습니다.
3. 찾으려는 이름과 가장 비슷한 이름을 찾습니다.

⇒ 키 : 국적, 나이

1. 선형 검색 : 무작위로 늘어서 있는 데이터 모임에서 검색을 수행한다
2. 이진 검색 : 일정한 규칙으로 늘어서 있는 데이터 모임에서 아주 빠른 검색을 수행한다
3. 해시법 : 추가, 삭제가 자주 일어나는 데이터 모임에서 아주 빠른 검색을 수행한다
    1. 체인법 : 같은 해시값으 데이터를 선형 리스트로 연결하는 방법
    2. 오픈 주소법 : 데이터를 위한 해시값이 충돌할 때 재해시하는 방법

이런것들을 소요되는 비용을 고려하여 잘 사용해한다.

### 선형 검색(가장 기본적인 알고리즘)

요소가 직선 모양으로 늘어선 배열에서 원하는 키값을 갖는 요소를 만날 때까지 맨 앞부터 순서대로 요소 검색

= 선형 검색, 순차 검색

![스크린샷 2025-03-05 오전 10.57.10.png](attachment:91092407-1ed1-4c95-ba9a-a8ac61b2b2ae:스크린샷_2025-03-05_오전_10.57.10.png)

### 종료 조건

1. 검색할 값을 발견하지 못하고 배열의 끝을 지나간 경우  ⇒ 검색 실패
2. 검색할 값과 같은 요소를 발견한 경우  ⇒ 검색 성공

```java
int i = 0

while(true){
	if(i == n)
	return -1;
	if(a[i] == key)
	return i;
	i++;
}
```

1. i == n 이 성립하는 경우 종료조건 1 (검색 실패)
2. a[i] == key가 성립하는 경우 종료조건 2 (검색 성공)

SeqSearch.java

: 배열 a의 처음부터 끝까지 n개인 요소를 대상으로 값이 key인 요소를 선형 검색하고 검색한 요소의 인덱스 반환

key인 요소가 여러 개 존재하면 검색과정에서 처음 발견한 요소의 인덱스 반환

존재 하지 않으면 -1 반환

### 무한 루프 구현

: break, return 을 통해 루프를 빠져 나올 수 있다

```java
while(true){
}

for( ; true ; ){
}

do{
}while(true);

//코드는 보통 위에서 아래로 읽는다 do문은 끝까지 읽지 않으면 무한루프인지 모르므로 권장 x
```

### for문 구현

```java
 for(i = 0; i < n; i++){
            if(a[i] == key){
                return i;
            }
        }
        return -1;
```

요소를 순서대로 검색하는 선형 검색은 요소가 정렬되지 않은 배열에서 검색할 때 사용하는 유일한 방법이다.

### 보초법으로 선형검색 구현하기

: 종료 조건 1, 2를 모두 판단하지만 종료 조건을 검사하는 비용을 무시할순 없다 

이 비용을 반으로 줄이는 방법 : 보초법

![스크린샷 2025-03-05 오전 11.28.43.png](attachment:197fc49f-bda7-4870-967c-e9c53e8b5037:스크린샷_2025-03-05_오전_11.28.43.png)

- 원래 배열의 크기보다 1크게 하여 그자리(보초)에 검색할 값을 넣는다
- 이렇게 하면 원하는 값을 찾지 못한 경우 종료 조건 하나를 없애도 된다 (비용이 준다)

### 이진 검색

: 적용하는 전제 조건 = 데이커가 키값으로 이미 정렬되어 있다

선형 검색보다 좀 더 빠르게 검색할 수 있다는 장점

![스크린샷 2025-03-05 오후 1.28.03.png](attachment:40344407-b734-409c-acb5-c730012fa3bd:스크린샷_2025-03-05_오후_1.28.03.png)

검색 시작 : pl 

검색 중앙 : pc

검색 끝 : pr

30 탐색

- 중앙 27 보다 위임 pl = 29 pc = 38 pr = 47
- 중앙 전에 탐색 할 값이 있으므로 pr을 38로 하고 다시 검색
- 이런식으로 발견

종료 조건

1. a[pc]와 key가 일치
2. 검색 범위가 더 이상 없다.
